set(ProjectName Utility)

#1. Set Include Path.
INCLUDE_DIRECTORIES(
		${CMAKE_CURRENT_SOURCE_DIR}
)

#2. Set Lib Generation.
FILE(GLOB_RECURSE UTILITY_SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp)
FILE(GLOB_RECURSE UTILITY_SOURCEMM_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.mm)
FILE(GLOB_RECURSE UTILITY_HEADER_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.h)
FILE(GLOB_RECURSE UTILITY_HEADERPP_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.hpp)
SET(UTILITY_ALL_FILES ${UTILITY_SOURCE_FILES} ${UTILITY_SOURCEMM_FILES} ${UTILITY_HEADER_FILES} ${UTILITY_HEADERPP_FILES})
filter_platform_files(UTILITY_ALL_FILES Platform ${PLATFORM_FOLDER})

ADD_LIBRARY(${ProjectName} STATIC ${UTILITY_ALL_FILES})

SET_TARGET_PROPERTIES(${ProjectName}
	PROPERTIES	
#ARCHIVE_OUTPUT_DIRECTORY_DEBUG "${CMAKE_BINARY_DIR}/Beats/Run"
#ARCHIVE_OUTPUT_DIRECTORY_RELEASE "${CMAKE_BINARY_DIR}/Beats/Run"
#LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib.${PLATFORM_FOLDER}"
	RELEASE_POSTFIX "_r"
	DEBUG_POSTFIX "_d"
)
			
#3. Set Solution Framework.
INCLUDE(${CMAKE_SOURCE_DIR}/SourceGroupByDir.cmake)
SOURCE_GROUP_BY_DIR(UTILITY_ALL_FILES)

#4. Handle pre-compile files.
if(WIN32)
  if(MSVC)
	INCLUDE(${CMAKE_SOURCE_DIR}/MSVCPCH.cmake)
  	USE_MSVC_PCH(${ProjectName} stdafx.h stdafx.cpp)
  endif(MSVC)
endif(WIN32)


